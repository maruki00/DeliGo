syntax = "proto3";


option go_package = "profile.grpc";


import "../google/api/any.proto";
import "../google/api/annotations.proto";
import "../google/type/date.proto";

message Profile {
	string ID = 1 [json_name = "id"];
	string UserID = 2 [json_name = "user_id"];
	string FullName = 3 [json_name = "full_name"];
	string Avatar = 4 [json_name = "avatar"];
	string Bio = 5 [json_name = "bio"];
	google.type.Date created_at 	= 6 [json_name = "created_at"]; 
	google.type.Date updated_at 	= 7 [json_name = "updated_at"]; 
	google.type.Date deleted_at 	= 8 [json_name = "deleted_at"]; 	
}

message CreateProfileRequest  {
	string ID = 1 [json_name = "id"];
	string UserID = 2 [json_name = "user_id"];
	string FullName = 3 [json_name = "full_name"];
	string Avatar = 4 [json_name = "avatar"];
	string Bio = 5 [json_name = "bio"];     
}

message DeleteProfileRequest {
	string ID 			= 1 [json_name = "id"]; 
}

message UpdateProfileRequest {
	string ID = 1 [json_name = "id"];
	string UserID = 2 [json_name = "user_id"];
	string FullName = 3 [json_name = "full_name"];
	string Avatar = 4 [json_name = "avatar"];
	string Bio = 5 [json_name = "bio"];  
}

message EmptyProfileResponse{}
message ProfileResponse {
    int32 Code = 1 [ json_name = "code"];
    string Message = 2 [ json_name = "message"];
    google.protobuf.Any Result = 3 [ json_name = "result"]; 
}


service ProfileService {
	rpc Create(CreateProfileRequest) returns (ProfileResponse) {
		option (google.api.http) = {
			post: "/v1/profile/create",
			body: "*"
		};
	};
	
	rpc Delete(DeleteProfileRequest) returns (ProfileResponse) {
		option (google.api.http) = {
			post: "/v1/profile/delete",
			body: "*"
		};
	};

	rpc Update(UpdateProfileRequest) returns (ProfileResponse) {
		option (google.api.http) = {
			put: "/v1/profile/update",
			body: "*"
		};
	};

	rpc GetOne(EmptyProfileResponse) returns (ProfileResponse) {
		option (google.api.http) = {
			get: "/v1/profile"
		};
	};

	rpc GetMany(EmptyProfileResponse) returns (ProfileResponse) {
		option (google.api.http) = {
			get: "/v1/profiles"
		};
	};
	


	rpc Search(EmptyProfileResponse) returns (ProfileResponse) {
		option (google.api.http) = {
			post: "/v1/profiles/search",
			body: "*"
		};
	};
} 
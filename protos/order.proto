syntax = "proto3";

package order;

option go_package = "order";

message Order {
  int64 ID = 1 [ json_name = "id" ];
  string OrderFingerprint = 2 [ json_name = "order_fingerprint" ];
  int32 CostumerId = 3 [ json_name = "costumer_id" ];
  float Cost = 4 [ json_name = "cost" ];
  int32 Status = 5 [ json_name = "status" ];
  string CreatedAt = 6 [ json_name = "created_at" ];
  string UpdatedAt = 7 [ json_name = "updated_at" ];
}
message CreateOrderRequest {
  string OrderFingerprint = 2 [ json_name = "order_fingerprint" ];
  int32 CostumerId = 3 [ json_name = "costumer_id" ];
  float Cost = 4 [ json_name = "cost" ];
  int32 Status = 5 [ json_name = "status" ];
  string CreatedAt = 6 [ json_name = "created_at" ];
  string UpdatedAt = 7 [ json_name = "updated_at" ];
}
message CancelOrderRequest {}
message HistoryOrderRequest {}
message PickupOrderRequest {}
service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (OrderResponse) {
    option (google.api.http) = {
      post : "/v0/order/create",
      body : "*"
    };
  }
  rpc CancelOrder(CancelOrderRequest) returns (OrderResponse) {
    option (google.api.http) = {
      post : "/v0/order/cancel",
      body : "*"
    };
  }
  rpc OrderHistory(HistoryOrderRequest) returns (OrderResponse) {
    option (google.api.http) = {
      get : "/v0/order/history/{id}",
    };
  }
  rpc PickupOrder(PickupOrderRequest) returns (OrderResponse) {
    option (google.api.http) = {
      post : "/v0/order/pickup-confirm/{id}",
      body : "*"
    };
  }
}

syntax = "proto3";

package product;

option go_package = "go/grpc";

message Product {
  optional string Id = 1 [json_name = "id"];
  string Label = 2 [json_name = "label"];
  float Price = 3 [json_name = "price"];
  float Discount = 4 [json_name = "discount"];
  optional string CreateAt = 5 [json_name = "create_at"];
  optional string UpdatedAt = 6 [json_name = "updated_at"];
}


message InsertRequest {
  string Label = 1;
  float price = 2;
  float discount = 3;
}
message SearchProductRequest { string Query = 1; }
message UpdateProductRequest {
  string Id = 1;
  optional string Label = 2;
  optional float price = 3;
  optional float discount = 4;
  optional string CreateAt = 5;
  optional string UppdatedAt = 6;
}
message DeleteProductRequest { string Id = 1; }
message GetProductProductRequest { string Id = 1; }
message MultipleProductsRequest {}




message ProductResposnse {
  int32  status = 1 [json_name  = "status"]; 
  string Message = 2 [json_name  = "message"];
  any Data = 3 [json_name = "data"];
}

service PersonService {
  rpc Insert(InsertProductRequest) returns (ProductResponse) {
    option (google.api.http) = {
      post:"/v0/product/insert",
      body: "*"
    };
  }
  rpc Update(UpdateProductRequest) returns (ProductResponse) {
    option (google.api.http) = {
      post:"/v0/product/update",
      body: "*"
    };
  }
  rpc Delete(DeleteProductRequest) returns (ProductResponse) {
    option (google.api.http) = {
      delete:"/v0/product/delete",
      body: "*"
    };
  }
  rpc Search(SearchProductRequest) returns (ProductResponse) {
    option (google.api.http) = {
      post:"/v0/product/search",
      body: "*"
    };
  }
  rpc GetProduct(GetProductProductRequest) returns (ProductResponse) {
    option (google.api.http) = {
      post:"/v0/product/get",
      body: "*"
    };
  }
  rpc MultipleProducts(MultipleProductsProductRequest) returns (ProductResponse) {
    option (google.api.http) = {
      post:"/v0/product/multiple",
      body: "*"
    };
  }
}

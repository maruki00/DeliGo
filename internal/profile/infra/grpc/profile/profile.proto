syntax = "proto3";

option go_package = "profile.grpc";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "validate/validate.proto";

message Profile {
	string ID 		= 1 [json_name = "id"];
	string UserID 	= 2 [json_name = "user_id"];
	string FullName = 3 [json_name = "full_name"];
	string Avatar 	= 4 [json_name = "avatar"];
	string Bio 		= 5 [json_name = "bio"];
}

message CreateProfileRequest  {
	string UserID 	= 1 [
		(validate.rules).string = {
			min_len: 4,  
			max_len: 32,
		},
		json_name = "user_id"];
	string FullName = 2 [
		(validate.rules).string = {
			min_len: 4,  
			max_len: 56,
			pattern: "^[a-zA-Z0-9_ ]+$"
		},
		json_name = "full_name"];
	string Avatar 	= 3 [
		(validate.rules).string = {
			min_len: 4,  
			max_len: 255,
		},
		json_name = "avatar"];
	string Bio 		= 4 [
		(validate.rules).string = {
			min_len: 0,  
			max_len: 255,
		},
		json_name = "bio"]; 
}

message DisableProfileRequest {
	string ID 			= 1 [
		(validate.rules).string = {
			min_len: 4,  
			max_len: 32,
		},
		json_name = "id"
	]; 
}

message GETRequest {
	google.protobuf.Struct query_params = 1;
}

message UpdateProfileRequest {
	string ID 					= 1 [
		(validate.rules).string = {
			min_len: 4,  
			max_len: 32,
		},
		json_name = "id"
	];
	map<string, string> fields  = 2 [json_name = "fields"];
}

message UpdateProfileAvatareRequest {
	string ID 					= 1 [
		(validate.rules).string = {
			min_len: 4,  
			max_len: 32,
		},
		json_name = "id"
	];
	string avatar  				= 2 [
		(validate.rules).string = {
			min_len: 4,  
			max_len: 255,
		},
		json_name = "avatar"
	];
}


message ProfileResponse {
	int32 Code 								= 1 [ json_name = "code"];
    string Message 							= 2 [ json_name = "message"];
	repeated google.protobuf.Value  Result 	= 3 [ json_name = "result"]; 
}

message EmptyProfileResponse {
	int32 Page 		= 1 [
		(validate.rules).int32 = true,
		json_name="page"
	];
	int32 Offset 	= 2 [
		(validate.rules).int32 = true,
		json_name="offset"
	];
}

service ProfileService {

	rpc Save(CreateProfileRequest) returns (ProfileResponse) {
		option (google.api.http) = {
			post: "/v1/profile/create",
			body: "*"
		};
	};

	rpc Disable(DisableProfileRequest) returns (ProfileResponse) {
		option (google.api.http) = {
			post: "/v1/profile/delete",
			body: "*"
		};
	};
	
	rpc Update(UpdateProfileRequest) returns (ProfileResponse) {
		option (google.api.http) = {
			put: "/v1/profile/update",
			body: "*"
		};
	};

	rpc UpdateAvatar(UpdateProfileAvatareRequest) returns (ProfileResponse) {
		option (google.api.http) = {
			put: "/v1/profile/update-avatar",
			body: "*"
		};
	};

	rpc GetOne(GETRequest) returns (ProfileResponse) {
		option (google.api.http) = {
			get: "/v1/profile",
		};
	};
	
} 


